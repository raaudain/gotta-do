{"ast":null,"code":"var _jsxFileName = \"/Users/ramon/Documents/lambda/03.WebApplicationII/01.AdvancedReact/01.ClassComponents/React-Todo/src/components/TodoForm.js\";\nimport React from \"react\";\n\nclass TodoForm extends React.Component {\n  constructor() {\n    super();\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.reset(); // Resets value to blank\n\n      this.props.addItem(this.state.item); // addItem function located in App.js\n    };\n\n    this.state = {\n      item: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let storeTasks = localStorage.getItem(\"storeTasks\");\n\n    if (storeTasks) {\n      storeTasks = JSON.parse(storeTasks);\n      this.setState({\n        item: storeTasks\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"storeTasks\", JSON.stringify(this.state.item));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"inputField\",\n      placeholder: \"Whatcha gotta do?\",\n      type: \"text\",\n      value: this.item,\n      name: \"item\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"addBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add\"));\n  }\n\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/ramon/Documents/lambda/03.WebApplicationII/01.AdvancedReact/01.ClassComponents/React-Todo/src/components/TodoForm.js"],"names":["React","TodoForm","Component","constructor","changeHandler","event","setState","target","name","value","submitHandler","preventDefault","reset","props","addItem","state","item","componentDidMount","storeTasks","localStorage","getItem","JSON","parse","componentDidUpdate","setItem","stringify","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAuBbC,aAvBa,GAuBGC,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,OAAd;AAGH,KA3BY;;AAAA,SA6BbC,aA7Ba,GA6BGL,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACM,cAAN;AACAN,MAAAA,KAAK,CAACE,MAAN,CAAaK,KAAb,GAFqB,CAEC;;AACtB,WAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKC,KAAL,CAAWC,IAA9B,EAHqB,CAGgB;AACxC,KAjCY;;AAET,SAAKD,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;;AAEA,QAAGF,UAAH,EAAc;AACVA,MAAAA,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAb;AAEA,WAAKZ,QAAL,CAAc;AACVU,QAAAA,IAAI,EAAEE;AADI,OAAd;AAGH;AACJ;;AAEDK,EAAAA,kBAAkB,GAAE;AAChBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmCH,IAAI,CAACI,SAAL,CAAe,KAAKV,KAAL,CAAWC,IAA1B,CAAnC;AACH;;AAcDU,EAAAA,MAAM,GAAE;AACJ,WAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAE,KAAKhB,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAE,KAAKM,IAJhB;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,QAAQ,EAAE,KAAKZ,aANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,CAFJ;AAgBH;;AArDiC;;AAwDtC,eAAeH,QAAf","sourcesContent":["import React from \"react\";\n\nclass TodoForm extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            item: \"\"\n        };\n    }\n\n    componentDidMount(){\n        let storeTasks = localStorage.getItem(\"storeTasks\");\n\n        if(storeTasks){\n            storeTasks = JSON.parse(storeTasks);\n\n            this.setState({\n                item: storeTasks\n            });\n        }\n    }\n\n    componentDidUpdate(){\n        localStorage.setItem(\"storeTasks\", JSON.stringify(this.state.item));\n    }\n\n    changeHandler = event => {\n        this.setState({\n            [event.target.name]: event.target.value \n        });\n    }\n\n    submitHandler = event => {\n        event.preventDefault();\n        event.target.reset(); // Resets value to blank\n        this.props.addItem(this.state.item); // addItem function located in App.js\n    }\n\n    render(){\n        return(\n\n            <form className=\"form\" onSubmit={this.submitHandler}>\n                <input\n                    className=\"inputField\"\n                    placeholder=\"Whatcha gotta do?\"\n                    type=\"text\"\n                    value={this.item}\n                    name=\"item\"\n                    onChange={this.changeHandler}\n                />\n\n                <button className=\"addBtn\">Add</button>\n            </form>\n \n        );\n    }\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}