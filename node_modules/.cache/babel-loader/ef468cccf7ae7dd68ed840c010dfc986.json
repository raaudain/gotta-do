{"ast":null,"code":"import _toConsumableArray from\"/Users/ramon/Documents/web-projects/gotta-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/ramon/Documents/web-projects/gotta-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/ramon/Documents/web-projects/gotta-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ramon/Documents/web-projects/gotta-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ramon/Documents/web-projects/gotta-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ramon/Documents/web-projects/gotta-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ramon/Documents/web-projects/gotta-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import TodoList from\"./components/TodoList\";import TodoForm from\"./components/TodoForm\";import\"./css/Todo.css\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.toggleItem=function(id){console.log(\"Item number: \".concat(id));_this.setState({todos:_this.state.todos.map(function(item){if(item.id===id){console.log(\"Completed: \".concat(!item.isDone));// Shows value item should be once clicked.\nreturn _objectSpread({},item,{// Spread operator flattens array\nisDone:!item.isDone// If the \"id is equal, change the value from false to true\"\n});}else{return item;}})});};_this.addItem=function(itemName){// Creates new item\nvar newItem={task:itemName,id:Date.now(),isDone:false};_this.setState({todos:[].concat(_toConsumableArray(_this.state.todos),[newItem])// Adds new item to the end of the Todos array.\n});};_this.clearCompleted=function(){_this.setState({todos:_this.state.todos.filter(function(item){return!item.isDone;})// Looking for uncompleted tasks\n});};_this.state={todos:// Retrieves and displays items from local storage\nlocalStorage.getItem(\"todos\")?JSON.parse(localStorage.getItem(\"todos\")):[]};return _this;}// Sets items in local storage\n_createClass(App,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){localStorage.setItem(\"todos\",JSON.stringify(this.state.todos));}// Toggles item as FALSE or TRUE when clicked.\n},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"container\"},React.createElement(\"h2\",null,\"Gotta Do List\"),React.createElement(TodoForm,{addItem:this.addItem}),React.createElement(TodoList,{todos:this.state.todos,toggleItem:this.toggleItem,clearCompleted:this.clearCompleted}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/ramon/Documents/web-projects/gotta-do/src/App.js"],"names":["React","TodoList","TodoForm","App","toggleItem","id","console","log","setState","todos","state","map","item","isDone","addItem","itemName","newItem","task","Date","now","clearCompleted","filter","localStorage","getItem","JSON","parse","setItem","stringify","Component"],"mappings":"y5DAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAO,gBAAP,C,GAEMC,CAAAA,G,yEAEJ,cAAa,qCACX,uEADW,MAgBbC,UAhBa,CAgBA,SAAAC,EAAE,CAAI,CACjBC,OAAO,CAACC,GAAR,wBAA4BF,EAA5B,GACA,MAAKG,QAAL,CAAc,CACZC,KAAK,CAAE,MAAKC,KAAL,CAAWD,KAAX,CAAiBE,GAAjB,CAAqB,SAAAC,IAAI,CAAI,CAClC,GAAGA,IAAI,CAACP,EAAL,GAAYA,EAAf,CAAkB,CAChBC,OAAO,CAACC,GAAR,sBAA0B,CAACK,IAAI,CAACC,MAAhC,GAA2C;AAC3C,wBACKD,IADL,EACY;AACVC,MAAM,CAAE,CAACD,IAAI,CAACC,MAAO;AAFvB,GAID,CAND,IAOI,CACF,MAAOD,CAAAA,IAAP,CACD,CACF,CAXM,CADK,CAAd,EAcD,CAhCY,OAkCbE,OAlCa,CAkCH,SAAAC,QAAQ,CAAI,CACpB;AACA,GAAMC,CAAAA,OAAO,CAAG,CACdC,IAAI,CAAEF,QADQ,CAEdV,EAAE,CAAEa,IAAI,CAACC,GAAL,EAFU,CAGdN,MAAM,CAAE,KAHM,CAAhB,CAKA,MAAKL,QAAL,CAAc,CACZC,KAAK,8BAAM,MAAKC,KAAL,CAAWD,KAAjB,GAAwBO,OAAxB,EAAiC;AAD1B,CAAd,EAID,CA7CY,OA+CbI,cA/Ca,CA+CI,UAAM,CACrB,MAAKZ,QAAL,CAAc,CACZC,KAAK,CAAE,MAAKC,KAAL,CAAWD,KAAX,CAAiBY,MAAjB,CAAwB,SAAAT,IAAI,QAAI,CAACA,IAAI,CAACC,MAAV,EAA5B,CAA8C;AADzC,CAAd,EAGD,CAnDY,CAEX,MAAKH,KAAL,CAAa,CACXD,KAAK,CACH;AACAa,YAAY,CAACC,OAAb,CAAqB,OAArB,EACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADF,CAC8C,EAJrC,CAAb,CAFW,aAQZ,CAED;+EACoB,CAChBD,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BF,IAAI,CAACG,SAAL,CAAe,KAAKjB,KAAL,CAAWD,KAA1B,CAA9B,EACH,CAED;uCAsCS,CACP,MACE,4BAAK,SAAS,CAAC,WAAf,EACE,8CADF,CAEE,oBAAC,QAAD,EACE,OAAO,CAAE,KAAKK,OADhB,EAFF,CAME,oBAAC,QAAD,EACE,KAAK,CAAE,KAAKJ,KAAL,CAAWD,KADpB,CAEE,UAAU,CAAE,KAAKL,UAFnB,CAGE,cAAc,CAAE,KAAKgB,cAHvB,EANF,CADF,CAcD,C,iBAtEepB,KAAK,CAAC4B,S,EA0ExB,cAAezB,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\nimport \"./css/Todo.css\";\n\nclass App extends React.Component {\n  \n  constructor(){\n    super();\n    this.state = {\n      todos: \n        // Retrieves and displays items from local storage\n        localStorage.getItem(\"todos\") \n        ? JSON.parse(localStorage.getItem(\"todos\")) : []\n    }\n  }\n\n  // Sets items in local storage\n  componentDidUpdate(){\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n\n  // Toggles item as FALSE or TRUE when clicked.\n  toggleItem = id => {\n    console.log(`Item number: ${id}`);\n    this.setState({\n      todos: this.state.todos.map(item => {\n        if(item.id === id){\n          console.log(`Completed: ${!item.isDone}`); // Shows value item should be once clicked.\n          return{\n            ...item,  // Spread operator flattens array\n            isDone: !item.isDone // If the \"id is equal, change the value from false to true\"\n          };\n        }\n        else{\n          return item;\n        }\n      })\n    });\n  }\n\n  addItem = itemName => {\n    // Creates new item\n    const newItem = {\n      task: itemName,\n      id: Date.now(),\n      isDone: false\n    };\n    this.setState({\n      todos: [...this.state.todos, newItem] // Adds new item to the end of the Todos array.\n\n    });\n  }\n\n  clearCompleted = () => {\n    this.setState({\n      todos: this.state.todos.filter(item => !item.isDone) // Looking for uncompleted tasks\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Gotta Do List</h2>\n        <TodoForm \n          addItem={this.addItem} \n        />\n      \n        <TodoList\n          todos={this.state.todos}\n          toggleItem={this.toggleItem}\n          clearCompleted={this.clearCompleted}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}