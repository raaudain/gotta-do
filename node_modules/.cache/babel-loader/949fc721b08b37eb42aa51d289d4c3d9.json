{"ast":null,"code":"import _defineProperty from \"/Users/ramon/Documents/lambda/03.WebApplicationII/01.AdvancedReact/01.ClassComponents/React-Todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ramon/Documents/lambda/03.WebApplicationII/01.AdvancedReact/01.ClassComponents/React-Todo/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TodoList from \"./components/TodoComponents/TodoList\";\nimport TodoForm from \"./components/TodoComponents/TodoForm\";\nimport \"./components/TodoComponents/Todo.css\";\nconst todosData = [{\n  name: \"Go to grocery store\",\n  id: 1234,\n  completed: false\n}];\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleItem = id => {\n      console.log(id);\n      this.setState({\n        todos: this.state.todos.map(item => {\n          if (item.id === id) {\n            console.log(!item.completed); // Shows value item should be once clicked.\n\n            return _objectSpread({}, item, {\n              // Spread operator flattens array\n              completed: !item.completed // If the \"id is equal, change the value from false to true\"\n\n            });\n          } else {\n            return item;\n          }\n        })\n      });\n    };\n\n    this.addItem = itemName => {\n      // Creates new item\n      const newItem = {\n        name: itemName,\n        id: Date.now(),\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newItem] // Adds new item to the end of the Todos array.\n\n      });\n    };\n\n    this.clearCompleted = () => {\n      this.setState({\n        todos: this.state.todos.filter(item => item.completed === false) // Looking for uncompleted tasks\n\n      });\n    };\n\n    this.state = {\n      todos: todosData\n    };\n  } // Toggles item as TRUE or FALSE when clicked.\n\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"todosData\", \"hey\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Gotta-do List\"), React.createElement(TodoForm, {\n      addItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todos: this.state.todos,\n      toggleItem: this.toggleItem,\n      clearCompleted: this.clearCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ramon/Documents/lambda/03.WebApplicationII/01.AdvancedReact/01.ClassComponents/React-Todo/src/App.js"],"names":["React","TodoList","TodoForm","todosData","name","id","completed","App","Component","constructor","toggleItem","console","log","setState","todos","state","map","item","addItem","itemName","newItem","Date","now","clearCompleted","filter","componentWillUpdate","nextProps","nextState","localStorage","setItem","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAO,sCAAP;AAGA,MAAMC,SAAS,GAAE,CACf;AACEC,EAAAA,IAAI,EAAE,qBADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CADe,CAAjB;;AAQA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAQbC,UARa,GAQAL,EAAE,IAAI;AACjBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACA,WAAKQ,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,GAAjB,CAAqBC,IAAI,IAAI;AAClC,cAAGA,IAAI,CAACZ,EAAL,KAAYA,EAAf,EAAkB;AAChBM,YAAAA,OAAO,CAACC,GAAR,CAAY,CAACK,IAAI,CAACX,SAAlB,EADgB,CACa;;AAC7B,qCACKW,IADL;AACY;AACVX,cAAAA,SAAS,EAAE,CAACW,IAAI,CAACX,SAFnB,CAE6B;;AAF7B;AAID,WAND,MAOI;AACF,mBAAOW,IAAP;AACD;AACF,SAXM;AADK,OAAd;AAcD,KAxBY;;AAAA,SA0BbC,OA1Ba,GA0BHC,QAAQ,IAAI;AACpB;AACA,YAAMC,OAAO,GAAG;AACdhB,QAAAA,IAAI,EAAEe,QADQ;AAEdd,QAAAA,EAAE,EAAEgB,IAAI,CAACC,GAAL,EAFU;AAGdhB,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAKA,WAAKO,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,KAAf,EAAsBM,OAAtB,CADK,CAC0B;;AAD1B,OAAd;AAID,KArCY;;AAAA,SAuCbG,cAvCa,GAuCI,MAAM;AACrB,WAAKV,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBU,MAAjB,CAAwBP,IAAI,IAAIA,IAAI,CAACX,SAAL,KAAmB,KAAnD,CADK,CACqD;;AADrD,OAAd;AAGD,KA3CY;;AAEX,SAAKS,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAEX;AADI,KAAb;AAGD,GAP+B,CAShC;;;AAsCAsB,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACvCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkC,KAAlC;AAED;;AAGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,KAAKZ,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAMA,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWD,KADpB;AAEE,MAAA,UAAU,EAAE,KAAKJ,UAFnB;AAGE,MAAA,cAAc,EAAE,KAAKa,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADF;AAcD;;AApE+B;;AAwElC,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport TodoList from \"./components/TodoComponents/TodoList\";\nimport TodoForm from \"./components/TodoComponents/TodoForm\";\nimport \"./components/TodoComponents/Todo.css\"\n\n\nconst todosData =[\n  {\n    name: \"Go to grocery store\",\n    id: 1234,\n    completed: false\n  }\n]\n\nclass App extends React.Component {\n  \n  constructor(){\n    super();\n    this.state = {\n      todos: todosData\n    };\n  }\n\n  // Toggles item as TRUE or FALSE when clicked.\n  toggleItem = id => {\n    console.log(id);\n    this.setState({\n      todos: this.state.todos.map(item => {\n        if(item.id === id){\n          console.log(!item.completed) // Shows value item should be once clicked.\n          return{\n            ...item,  // Spread operator flattens array\n            completed: !item.completed // If the \"id is equal, change the value from false to true\"\n          };\n        }\n        else{\n          return item;\n        }\n      })\n    });\n  }\n\n  addItem = itemName => {\n    // Creates new item\n    const newItem = {\n      name: itemName,\n      id: Date.now(),\n      completed: false\n    };\n    this.setState({\n      todos: [...this.state.todos, newItem] // Adds new item to the end of the Todos array.\n\n    })\n  }\n\n  clearCompleted = () => {\n    this.setState({\n      todos: this.state.todos.filter(item => item.completed === false) // Looking for uncompleted tasks\n    })\n  }\n\n  componentWillUpdate(nextProps, nextState){\n    localStorage.setItem(\"todosData\", \"hey\")\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Gotta-do List</h2>\n        <TodoForm \n          addItem={this.addItem} \n        />\n      \n      <TodoList\n        todos={this.state.todos}\n        toggleItem={this.toggleItem}\n        clearCompleted={this.clearCompleted}\n      />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}