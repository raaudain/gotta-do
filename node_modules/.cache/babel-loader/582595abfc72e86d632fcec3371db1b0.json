{"ast":null,"code":"var _jsxFileName = \"/Users/ramon/Documents/web-projects/gotta-do/src/App.js\";\nimport React from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\nimport \"./css/Todo.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleItem = id => {\n      console.log(`Item number: ${id}`);\n      this.setState({\n        todos: this.state.todos.map(item => {\n          if (item.id === id) {\n            console.log(`Completed: ${!item.isDone}`); // Shows value item should be once clicked.\n\n            return { ...item,\n              // Spread operator flattens array\n              isDone: !item.isDone // If the \"id is equal, change the value from false to true\"\n\n            };\n          } else {\n            return item;\n          }\n        })\n      });\n    };\n\n    this.addItem = itemName => {\n      // Creates new item\n      const newItem = {\n        task: itemName,\n        id: Date.now(),\n        isDone: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newItem] // Adds new item to the end of the Todos array.\n\n      });\n    };\n\n    this.clearCompleted = () => {\n      this.setState({\n        todos: this.state.todos.filter(item => !item.isDone) // Looking for uncompleted tasks\n\n      });\n    };\n\n    this.state = {\n      todos: // Retrieves and displays items from local storage\n      localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : []\n    };\n  } // Sets items in local storage\n\n\n  componentDidUpdate() {\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  } // Toggles item as FALSE or TRUE when clicked.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Gotta Do List\"), /*#__PURE__*/React.createElement(TodoForm, {\n      addItem: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      todos: this.state.todos,\n      toggleItem: this.toggleItem,\n      clearCompleted: this.clearCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ramon/Documents/web-projects/gotta-do/src/App.js"],"names":["React","TodoList","TodoForm","App","Component","constructor","toggleItem","id","console","log","setState","todos","state","map","item","isDone","addItem","itemName","newItem","task","Date","now","clearCompleted","filter","localStorage","getItem","JSON","parse","componentDidUpdate","setItem","stringify","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,gBAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,UAjBc,GAiBDC,EAAE,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeF,EAAG,EAA/B;AACA,WAAKG,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,GAAjB,CAAqBC,IAAI,IAAI;AAClC,cAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAClBC,YAAAA,OAAO,CAACC,GAAR,CAAa,cAAa,CAACK,IAAI,CAACC,MAAO,EAAvC,EADkB,CACyB;;AAC3C,mBAAO,EACL,GAAGD,IADE;AACI;AACTC,cAAAA,MAAM,EAAE,CAACD,IAAI,CAACC,MAFT,CAEgB;;AAFhB,aAAP;AAID,WAND,MAMO;AACL,mBAAOD,IAAP;AACD;AACF,SAVM;AADK,OAAd;AAaD,KAhCa;;AAAA,SAkCdE,OAlCc,GAkCJC,QAAQ,IAAI;AACpB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,IAAI,EAAEF,QADQ;AAEdV,QAAAA,EAAE,EAAEa,IAAI,CAACC,GAAL,EAFU;AAGdN,QAAAA,MAAM,EAAE;AAHM,OAAhB;AAKA,WAAKL,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,KAAf,EAAsBO,OAAtB,CADK,CAC0B;;AAD1B,OAAd;AAGD,KA5Ca;;AAAA,SA8CdI,cA9Cc,GA8CG,MAAM;AACrB,WAAKZ,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBY,MAAjB,CAAwBT,IAAI,IAAI,CAACA,IAAI,CAACC,MAAtC,CADK,CACyC;;AADzC,OAAd;AAGD,KAlDa;;AAEZ,SAAKH,KAAL,GAAa;AACXD,MAAAA,KAAK,EACH;AACAa,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADJ,GAEI;AALK,KAAb;AAOD,GAV+B,CAYhC;;;AACAG,EAAAA,kBAAkB,GAAG;AACnBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAe,KAAKlB,KAAL,CAAWD,KAA1B,CAA9B;AACD,GAf+B,CAiBhC;;;AAoCAoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKf,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWD,KADpB;AAEE,MAAA,UAAU,EAAE,KAAKL,UAFnB;AAGE,MAAA,cAAc,EAAE,KAAKgB,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAYD;;AAlE+B;;AAqElC,eAAenB,GAAf","sourcesContent":["import React from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\nimport \"./css/Todo.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos:\n        // Retrieves and displays items from local storage\n        localStorage.getItem(\"todos\")\n          ? JSON.parse(localStorage.getItem(\"todos\"))\n          : []\n    };\n  }\n\n  // Sets items in local storage\n  componentDidUpdate() {\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n\n  // Toggles item as FALSE or TRUE when clicked.\n  toggleItem = id => {\n    console.log(`Item number: ${id}`);\n    this.setState({\n      todos: this.state.todos.map(item => {\n        if (item.id === id) {\n          console.log(`Completed: ${!item.isDone}`); // Shows value item should be once clicked.\n          return {\n            ...item, // Spread operator flattens array\n            isDone: !item.isDone // If the \"id is equal, change the value from false to true\"\n          };\n        } else {\n          return item;\n        }\n      })\n    });\n  };\n\n  addItem = itemName => {\n    // Creates new item\n    const newItem = {\n      task: itemName,\n      id: Date.now(),\n      isDone: false\n    };\n    this.setState({\n      todos: [...this.state.todos, newItem] // Adds new item to the end of the Todos array.\n    });\n  };\n\n  clearCompleted = () => {\n    this.setState({\n      todos: this.state.todos.filter(item => !item.isDone) // Looking for uncompleted tasks\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Gotta Do List</h2>\n        <TodoForm addItem={this.addItem} />\n\n        <TodoList\n          todos={this.state.todos}\n          toggleItem={this.toggleItem}\n          clearCompleted={this.clearCompleted}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}